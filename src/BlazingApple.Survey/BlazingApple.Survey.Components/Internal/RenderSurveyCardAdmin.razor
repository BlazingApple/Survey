@using BlazingApple.Survey.Components.Internal.Questions
@using BlazingApple.Survey.Components.Services
@using BlazingApple.Components

@if(Survey is not null) {
	<Card Title="@Survey.Name">
		<HeaderContent>
			<div>
				@if (SurveyHeaderContent is not null)
				{
					@SurveyHeaderContent(Survey)
				}
				<button title="Edit Survey" type="button" class="btn btn-link px-1" @onclick="OnEditSurveyClick" disabled="@_isEditing">
					<Icon I="BlazingApple.Components.Services.IconType.Edit" />
				</button>
				<button title="Delete Survey" type="button" class="btn btn-link px-1" @onclick="(async () => await DeleteSurveyDialog(Survey))" disabled="@_isEditing">
					<Icon I="BlazingApple.Components.Services.IconType.Delete" />
				</button>
			</div>
		</HeaderContent>
		<ChildContent>
			@if (SurveyBodyContent is not null)
			{
				@SurveyBodyContent(Survey)
			}

			@if(_isEditing) {
				<EditSurveyInline @bind-Value="_isEditing" AdditionalSegments="@AdditionalSegments" SelectedSurvey="Survey" OnClose="OnUpdateInternal"></EditSurveyInline>
			}

			<div class="row">
				<div class="col-md-12">
					<QuestionsAdmin SelectedSurvey="@Survey" MaxOptionsDisplay="@MaxOptionsDisplay"></QuestionsAdmin>
				</div>
			</div>
		</ChildContent>
	</Card>
}

@code {
	async Task DeleteSurveyDialog(Shared.Survey survey)
	{
		await DialogService.OpenAsync("Delete Survey", ds =>
	@<div>
		<p class="mb-2">Are you sure you want to delete this survey? This action cannot be undone.</p>
		<div class="row">
			<div class="col-md-12">
				<button type="button" @onclick="(async () => await Delete(survey))" class="btn btn-outline-danger mb-1">Yes, delete</button>
				<button type="button" @onclick="() => ds.Close(false)" class="btn btn-secondary mb-1">Cancel</button>
			</div>
		</div>
	</div>);
	}
}