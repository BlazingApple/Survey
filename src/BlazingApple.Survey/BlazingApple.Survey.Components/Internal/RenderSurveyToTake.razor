@inherits OwningComponentBase<SurveyService>

@strError
@if (SeeResults)
{
	<button @onclick="OnStartOverClick" class="ml-1 btn btn-primary">Back</button>
	<RenderSurveyResults SelectedSurvey="SelectedSurvey"></RenderSurveyResults>
}
else if(SelectedSurvey is not null)
{
	@if (ShowSurveyComplete)
	{
		<h4>@string.Concat(SelectedSurvey.Name, " - ", @SurveyCompleteText)</h4>
	}
	else
	{
		<h4>@SelectedSurvey.Name</h4>
	}
	@if (SelectedSurvey.SurveyItems?.Count <= 0)
	{
		<h4>@NoQuestionsText</h4>
	}
	else if(SelectedSurvey != null && SelectedSurvey.SurveyItems != null)
	{
		<EditForm Model="@SelectedSurvey" OnValidSubmit="@SaveSurvey">
			<div>
				@foreach (var SurveyItem in SelectedSurvey.SurveyItems.OrderBy(x => x.Position))
				{
					@if(SurveyItem is not null) {
						<div class="row">
							<div class="col-md-9" style="text-align: left;margin-bottom: 20px">
								<div class="form-group">
									<label for="@SurveyItem.Id.ToString()">@SurveyItem.Prompt</label>
									@if (SurveyItem.ItemType == ItemType.TextBox)
									{
										<InputText id="@SurveyItem.Id.ToString()" class="form-control"
												   @bind-Value="@SurveyItem.AnswerValueString" disabled="@ShowSurveyComplete" />
									}
									@if (SurveyItem.ItemType == ItemType.TextArea)
									{
										<InputTextArea id="@SurveyItem.Id.ToString()" class="form-control"
													   @bind-Value="@SurveyItem.AnswerValueString" disabled="@ShowSurveyComplete" />
									}
									@if (SurveyItem.ItemType == ItemType.Date)
									{
										<InputDate id="@SurveyItem.Id.ToString()" class="form-control"
														  @bind-Value="@SurveyItem.AnswerValueDateTime"
														  TValue="DateTime?" disabled="@ShowSurveyComplete" />
									}
									@if (SurveyItem.ItemType == ItemType.DateTime)
									{
										<BlazingApple.Survey.Internal.InputDateTime TValue="DateTime?" id="@SurveyItem.Id.ToString()" class="form-control"
														  @bind-Value="@SurveyItem.AnswerValueDateTime" disabled="@ShowSurveyComplete" />
									}
									@if (SurveyItem.ItemType == ItemType.Dropdown)
									{
										<InputSelect id="@SurveyItem.Id.ToString()" @bind-Value="@SurveyItem.AnswerValueString"
													 class="form-control"
													 disabled="@ShowSurveyComplete" >
											@foreach(DTOSurveyItemOption option in @SurveyItem.Options!.OrderBy(x => x.Id)) {
												<option value="@option.OptionLabel">@option.OptionLabel</option>
											}
										</InputSelect>
									}
									@if (SurveyItem.ItemType == ItemType.DropdownMultiSelect)
									{
										<RadzenDropDown Name="@SurveyItem.Id.ToString()"
														TValue="IEnumerable<string>"
														Multiple="true"
														AllowClear="true"
														AllowFiltering="true"
														@bind-Value="SurveyItem.AnswerValueList"
														Placeholder="Select..."
														Data="@SurveyItem.Options"
														TextProperty="OptionLabel"
														ValueProperty="OptionLabel"
														Style="max-width:300px;" Disabled="ShowSurveyComplete" />
									}
									@if (SurveyItem.Required)
									{
										@*<br /><RadzenRequiredValidator Component="@SurveyItem.Id.ToString()"
															  Text="Required" Popup="false"
															  Style="position: absolute" />*@
									}
								</div>
							</div>
						</div>
					}
				}
			</div>
			<div class="row">
				<div class="col-lg-12">
					<button class="btn btn-primary" type="submit" disabled="@ShowSurveyComplete">Submit</button>
					@if (ShowSurveyComplete && AllowSeeResults)
					{
						<button class="btn btn-outline-primary" @onclick="OnSeeResultsClick" style="margin-left:.5rem;">See Results</button>
					}
				</div>
			</div>
		</EditForm>
	}
}
