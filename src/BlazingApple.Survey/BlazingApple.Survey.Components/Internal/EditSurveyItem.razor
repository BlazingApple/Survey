@using System.Linq;
@inject Radzen.DialogService dialogService
@inherits OwningComponentBase<SurveyService>
@strError

@if (SelectedSurveyItem != null)
{


    <EditForm Model="SelectedSurveyItem">
        <RadzenCard Style="margin: .1rem;">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label for="surveyText">Name</label>
                        <InputText id="surveyText" class="form-control" @bind-Value="SelectedSurveyItem.Prompt" />
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="itemType">Type</label>
                        <InputSelect id="itemType" class="form-control" TValue="ItemType" @bind-Value="SelectedSurveyItem.ItemType">
                            @foreach (ItemType itemType in FormTypes)
                            {
                                <option value="@itemType">@itemType</option>
                            }
                        </InputSelect>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" @bind-value="@SelectedSurveyItem.Required" id="requiredCheck">
                        <label class="form-check-label" for="requiredCheck">
                            Required
                        </label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @if ((SelectedSurveyItem.ItemType == ItemType.Dropdown)
                   || (SelectedSurveyItem.ItemType == ItemType.DropdownMultiSelect))
                    {
                        <button class="btn btn-info btn-sm" @onclick="OpenPopup">Edit Options</button>
                    }
                </div>
            </div>
        </RadzenCard>
        <button @onclick="AddOrUpdate" class="btn btn-success mb-2 mr-1">Save</button>
        <button @onclick="(()=>CloseSurveyItem())" class="btn btn-light mb-2 mr-1">Close</button>

        @if (SelectedSurveyItem.Id != default)
        {
            <button @onclick="DeleteSurveyItemDialog" class="btn btn-danger mb-2 mr-1">Delete</button>
        }

        @if (ShowPopup)
        {
            <div class="modal" tabindex="-1" style="display:block;background-color:gainsboro" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Edit Responses</h3>
                        </div>
                        <div class="modal-body">
                            @if (SelectedSurveyItem.Options != null)
                            {


                                <ul style="list-style-type:none;">
                                    @foreach (var option in SelectedSurveyItem.Options.OrderBy(x => x.Id))
                                    {
                                        <li>
                                            <div style="margin-bottom: 10px; width: 150px">
                                                <button class="btn btn-danger btn-sm" @onclick="(() => RemoveOption(option))">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                                <label>@option.OptionLabel</label>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                            <InputText class="form-control" @bind-Value="_newOption" />
                            <button @onclick="AddOption" class="btn btn-sm btn-success">Add</button>
                            <button @onclick="ClosePopup" class="btn btn-sm btn-light">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </EditForm>
}
@code {

    async Task DeleteSurveyItemDialog()
    {
        if (PromptInline)
        {
            await Delete();
        }
        else
        {
            await dialogService.OpenAsync("Delete Question", ds => @<RadzenCard Style="padding: 20px;">
        <p Style="margin-bottom: 10px;">Confirm?</p>
        <div class="row">
            <div class="col-md-12">
                <button class="btn btn-primary mb-1" @onclick="Delete">Yes</button>
                <button class="btn btn-secondary mb-1" @onclick="() => ds.Close(false)">No</button>
            </div>
        </div>
    </RadzenCard>);
        }

    }
}